filter {
  json(
    source_field: "message",
    on_error: "json_parse_failed"
  )

  # --- Ensure 'properties' exists ---
  if !has(properties) {
    set(properties, {})
  }

  # --- metadata.product_event_type ---
  if has(category) && category != "" {
    set(metadata.product_event_type, category)
  } else if has(operationName) && operationName != "" {
    set(metadata.product_event_type, operationName)
  } else if has(properties.EventType) && properties.EventType != "" {
    set(metadata.product_event_type, properties.EventType)
  } else {
    set(metadata.product_event_type, "unknown_event_type")
  }

  # --- Parse multiple TO addresses ---
  if has(properties.To) && properties.To != "" {
    if type(properties.To) == "list" {
      set(event1.idm.read_only_udm.network.email.to, properties.To)
    } else {
      set(event1.idm.read_only_udm.network.email.to, split(properties.To, ","))
    }
  }

  # --- Parse multiple CC addresses ---
  if has(properties.Cc) && properties.Cc != "" {
    if type(properties.Cc) == "list" {
      set(event1.idm.read_only_udm.network.email.cc, properties.Cc)
    } else {
      set(event1.idm.read_only_udm.network.email.cc, split(properties.Cc, ","))
    }
  }

  # --- SHA256 extraction logic ---
  if has(properties.SHA256) && properties.SHA256 != "" {
    set(event1.idm.read_only_udm.target.file.sha256, properties.SHA256)
  } else if has(properties.FileSha256) && properties.FileSha256 != "" {
    set(event1.idm.read_only_udm.target.file.sha256, properties.FileSha256)
  } else if has(properties.AttachmentSha256) && properties.AttachmentSha256 != "" {
    set(event1.idm.read_only_udm.target.file.sha256, properties.AttachmentSha256)
  }

  # --- Threat Category ---
  if has(properties.ThreatClassification) && properties.ThreatClassification != "" {
    set(event1.idm.read_only_udm.security_result.category, properties.ThreatClassification)
  }

  # --- Administrative Domain ---
  if has(properties.RecipientDomain) && properties.RecipientDomain != "" {
    set(event1.idm.read_only_udm.target.administrative_domain, properties.RecipientDomain)
  }

  # --- Additional Report ID ---
  if has(properties.ReportId) && properties.ReportId != "" {
    set(event1.idm.read_only_udm.additional.fields.ReportId, properties.ReportId)
  }
}
